---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: spinnaker-spinnaker-rosco
  namespace: spinnaker
  labels:
    app: spinnaker-spinnaker
    component: rosco
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spinnaker-spinnaker
      component: rosco
  template:
    metadata:
      creationTimestamp: 
      labels:
        app: spinnaker-spinnaker
        component: rosco
      annotations:
        checksum/config: 9f6777e4578dcb8f3083ce1e514eb789d126b2e26837ea97cd6cf8f7d6e03462
    spec:
      volumes:
      - name: spinnaker-spinnaker-spinnaker-config
        configMap:
          name: spinnaker-spinnaker-spinnaker-config
          defaultMode: 420
      - name: docker-bin
        hostPath:
          path: "/usr/bin/docker"
          type: ''
      - name: docker-sock
        hostPath:
          path: "/var/run/docker.sock"
          type: ''
      containers:
      - name: rosco
        image: gcr.io/spinnaker-marketplace/rosco:0.5.0-20180221133510
        ports:
        - name: rosco
          containerPort: 8087
          protocol: TCP
        resources: {}
        volumeMounts:
        - name: spinnaker-spinnaker-spinnaker-config
          mountPath: "/opt/spinnaker/config"
        - name: docker-bin
          mountPath: "/usr/bin/docker"
        - name: docker-sock
          mountPath: "/var/run/docker.sock"
        readinessProbe:
          httpGet:
            path: "/health"
            port: 8087
            scheme: HTTP
          initialDelaySeconds: 20
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
