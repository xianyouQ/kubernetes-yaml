---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: spinnaker-minio
  namespace: spinnaker
  labels:
    app: spinnaker-minio
    chart: minio-0.5.5
    heritage: Tiller
    release: spinnaker
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spinnaker-minio
  template:
    metadata:
      name: spinnaker-minio
      creationTimestamp: 
      labels:
        app: spinnaker-minio
        chart: minio-0.5.5
        heritage: Tiller
        release: spinnaker
    spec:
      volumes:
      - name: podinfo
        downwardAPI:
          items:
          - path: labels
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels
          defaultMode: 420
      - name: export
        persistentVolumeClaim:
          claimName: spinnaker-minio
      - name: minio-server-config
        configMap:
          name: spinnaker-minio-config-cm
          defaultMode: 420
      - name: minio-user
        secret:
          secretName: spinnaker-minio-user
          defaultMode: 420
      containers:
      - name: minio
        image: minio/minio:RELEASE.2016-11-26T02-23-47Z
        args:
        - server
        - "/export"
        ports:
        - name: service
          containerPort: 9000
          protocol: TCP
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: spinnaker-minio-user
              key: accesskey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: spinnaker-minio-user
              key: secretkey
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: export
          mountPath: "/export"
        - name: minio-server-config
          mountPath: "/root/.minio/"
        - name: podinfo
          mountPath: "/podinfo"
        livenessProbe:
          tcpSocket:
            port: 9000
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
